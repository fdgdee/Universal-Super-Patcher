name: SUPER PATCHER WITH CUSTOM GSI
permissions:
  contents: write
on:
  push:
    branches:
      - main  # Change this to your desired branch
  workflow_dispatch:
    inputs:
        DEVICE:
              description: ' Enter Your Device Name '
              required: true
              default: 'Samsung Galaxy A03-A035M'
        GSI:
              description: ' GSI Image Direct Link '
              required: true
              default: 'https://github.com/TrebleDroid/treble_experimentations/releases/download/ci-20230905/system-td-arm64-ab-vanilla.img.xz'        
        NAME:
              description: 'Rom Name'
              required: true
              default: 'aosp_13-arm64-abv-a03-a035m.7z'
        VERSION:
              description: 'Baseband Version'
              required: true
              default: 'A035MUBS8CYA3'
        SUPER:
              description: 'Enter Direct Link Of Your Super.img'
              required: true
              default: 'https://drive.google.com/file/d/1f5bs-56UJbv1ln57mYKIxk_DAtfvzKxl/view?usp=drive_link'
        PRODUCT:
              description: 'Firmware Product Img'
              required: false
              default: ''
        SYSTEM_EXT:
              description: 'Firmware System_ext Img'
              required: false
              default: '' 
jobs:
  Build:
    runs-on: ubuntu-latest

    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y zip xz-utils unzip p7zip-full
        sudo snap install android-platform-tools
        sudo snap connect android-platform-tools:adb-support
        sudo snap connect android-platform-tools:block-devices
        sudo snap connect android-platform-tools:raw-usb
        sudo snap connect android-platform-tools:removable-media
        sudo snap connect android-platform-tools:network
        sudo snap connect android-platform-tools:network-bind       
        sudo snap alias android-platform-tools.img2simg img2simg
        sudo snap alias android-platform-tools.simg2img simg2img
        sudo apt install -y python3-pip
        pip install gdown
        pip install --upgrade gdown
    - name: Installing Tools
      run: |
        git clone https://github.com/Exynos-nigg/lpunpack-lpmake-mirror.git lpbinary
        cd lpbinary
        bash install.sh
    - name: Downloading Your SUPER And Extracting
      run: |
        cd lpbinary/binary
        wget ${{ github.event.inputs.SUPER }}
        if [ ! -e super ]; then
          gdown --fuzzy ${{ github.event.inputs.SUPER }}
        fi
        if [ -f *.zip ]; then  unzip *.zip; rm *.zip; fi
        if [ -f *.7z ]; then  7z x *.7z; rm *.7z; fi
        if [ -f *.xz ]; then  unxz *.xz; fi
        simg2img super.img super.raw.img
        rm super.img
        wget https://sourceforge.net/projects/a03-files/files/Tools/lpdump
        chmod +x lpdump
        ./lpdump super.raw.img > super_map.txt
        ./lpunpack super.raw.img
        rm super.raw.img
        rm system.img && rm product.img 
        rm -f system_ext.img
        printf "$(<super_map.txt)" | grep -e "Size:" | awk '{print $2}' > super.txt
        printf "$(<super_map.txt)" | grep -e "Maximum size:" | awk '{print $3}' > main.txt
        if [ ${{ github.event.inputs.PRODUCT }} ]; then
          wget ${{ github.event.inputs.PRODUCT }}
          if [ ! -e product ]; then
            gdown --fuzzy ${{ github.event.inputs.PRODUCT }}
          fi
        else
          gdown --fuzzy 'https://drive.google.com/file/d/1-9vZIudEGR0I0svi97dIm2pTWLr6KDOU/view?usp=drive_link'
        fi
        if [ ${{ github.event.inputs.SYSTEM_EXT }} ]; then
          wget ${{ github.event.inputs.SYSTEM_EXT }}
          if [ ! -e system_ext ]; then
            gdown --fuzzy ${{ github.event.inputs.SYSTEM_EXT }}
          fi
        else
          gdown --fuzzy 'https://drive.google.com/file/d/1OTyWM7eaY8qkvrHio2WLmAiT_Tg7VpLc/view?usp=drive_link'
        fi
        if [ -f *.zip ]; then  unzip *.zip; rm *.zip; fi
        if [ -f *.7z ]; then  7z x *.7z; rm *.7z; fi
    - name: Downloading Your GSI And Extracting
      run: |
        cd lpbinary/binary
        wget ${{ github.event.inputs.GSI }}
        if [ $? -ne 0 ]; then
          gdown --fuzzy ${{ github.event.inputs.GSI }}
        fi
        if [ -f *.zip ]; then  unzip *.zip; rm *.zip; fi
        if [ -f *.7z ]; then  7z x *.7z; rm *.7z; fi
        mkdir sys
        mv *.xz sys
        cd sys
        unxz *.xz
        mv *.img ../system.img
        cd ..
    - name: Packing
      run: |
        cd lpbinary/binary
        if [ -f system_ext.img ]; then  ./lpmake --metadata-size 65536 --super-name super --metadata-slots 2 --device super:$(<super.txt) --group main:$(<main.txt) --partition system:readonly:$(ls -nl system.img | awk '{print $5}'):main --image system=system.img --partition vendor:readonly:$(ls -nl vendor.img | awk '{print $5}'):main --image vendor=vendor.img --partition product:readonly:$(ls -nl product.img | awk '{print $5}'):main --image product=product.img --partition system_ext:readonly:$(ls -nl system_ext.img | awk '{print $5}'):main --image system_ext=system_ext.img --sparse --output super.img; fi
        if [ -f odm.img ]; then  ./lpmake --metadata-size 65536 --super-name super --metadata-slots 2 --device super:$(<super.txt) --group main:$(<main.txt) --partition system:readonly:$(ls -nl system.img | awk '{print $5}'):main --image system=system.img --partition vendor:readonly:$(ls -nl vendor.img | awk '{print $5}'):main --image vendor=vendor.img --partition product:readonly:$(ls -nl product.img | awk '{print $5}'):main --image product=product.img --partition odm:readonly:$(ls -nl odm.img | awk '{print $5}'):main --image odm=odm.img --sparse --output super.img; fi
        rm system.img && rm product.img && rm vendor.img && rm -f odm.img && rm -f system_ext.img
    - name: Creating tar and compressing to 7z
      run: |
        cd lpbinary/binary
        tar -cvf super.tar super.img
        rm -rf super.img
        7z a ${{ github.event.inputs.NAME }} super.tar
        rm -rf super.tar
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: lpbinary/binary/${{ github.event.inputs.NAME }}
        name: ${{ github.event.inputs.NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
            Device: ${{ github.event.inputs.DEVICE }}
            Version: ${{ github.event.inputs.VERSION }}
            Rom Name: ${{ github.event.inputs.NAME }}
            Flash: Extract the 7z file and flash through ODIN in AP Section.
            NOTE: DONE SPECIFICALLY FOR A035M, NOT GUARANTED TO WORK FOR A035F OR OTHER VARIANTS
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
